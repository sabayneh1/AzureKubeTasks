# Default values for todo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: sabayneh
  pullPolicy: Always
  tagNotificationService: v4
  tagTodoService: v3
  tagUserService: v2
  tagFluentd: v6

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  requests:
    memory: "128Mi"
    cpu: "50m"
  limits:
    memory: "256Mi"
    cpu: "100m"

env:
  TODO_SERVICE_MONGO_URI: "mongodb://mongo:27017/todoService"
  USER_SERVICE_MONGO_URI: "mongodb://mongo:27017/userService"
  EMAIL_USER: "JHDmMQSFbLvbMojcCD7443miO1Byn6wF"
  EMAIL_PASS: "PocdqfaxpBoZYfzqssKCRpWzTDsXMLMX"
  EMAIL_HOST: "mailslurp.mx"
  EMAIL_PORT: "2465"
  JWT_SECRET: "samander's_jwt_secret"

livenessProbe:
  httpGet:
    path: /health
    port: 3001
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe:
  httpGet:
    path: /health
    port: 3001
  initialDelaySeconds: 30

livenessProbe2:
  httpGet:
    path: /health
    port: 3004
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe2:
  httpGet:
    path: /health
    port: 3004
  initialDelaySeconds: 30

livenessProbe3:
  httpGet:
    path: /health
    port: 3003
  initialDelaySeconds: 30
  periodSeconds: 30

readinessProbe3:
  httpGet:
    path: /health
    port: 3003
  initialDelaySeconds: 30

autoscaling:
  userService:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
  todoService:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50
  notificationService:
    enabled: true
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 50

elasticsearch:
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    tag: 7.10.1
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "2Gi"
      cpu: "400m"

kibana:
  image:
    repository: docker.elastic.co/kibana/kibana
    tag: 7.10.1
  service:
    type: LoadBalancer
    port: 5601
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "400m"

# Prometheus settings
prometheus:
  server:
    enabled: true
    image:
      repository: prom/prometheus
      tag: v2.28.1  # Specify the version you want
    resources:
      requests:
        memory: "512Mi"
        cpu: "500m"
      limits:
        memory: "1Gi"
        cpu: "1000m"
    service:
      type: ClusterIP
      port: 9090

# Grafana settings
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: 8.3.0
  service:
    type: LoadBalancer
    port: 3040
  admin:
    user: admin
    password: "strongPassword"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"


volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
