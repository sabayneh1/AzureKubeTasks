apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes 1;

    events {
        worker_connections 1024;
    }

    http {
        resolver 127.0.0.11;

        upstream user_service {
            server user-service.default.svc.cluster.local:3002;
        }

        upstream todo_service {
            server todo-service.default.svc.cluster.local:3003;
        }

        upstream notification_service {
            server notification-service.default.svc.cluster.local:3004;
        }

        upstream redis_sidecar {
            server redis-sidecar.default.svc.cluster.local:6379;
        }

        server {
            listen 80;

            location / {
                proxy_pass http://user_service;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
                proxy_set_header Authorization "";
            }

            location /users/ {
                proxy_pass http://user_service;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
                proxy_set_header Authorization "";
            }

            location /todos {
                proxy_pass http://todo_service;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
                proxy_set_header Authorization "";

                # Forward request to the Redis sidecar for caching
                proxy_intercept_errors on;
                error_page 200 = @cache;
            }

            location @cache {
                internal;
                proxy_pass http://redis_sidecar/cache;
                proxy_set_header X-User-Id $http_cookie_user_id;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location /notifications/ {
                proxy_pass http://notification_service;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Cookie $http_cookie;
                proxy_set_header Authorization "";
            }
        }
    }





#second one
########################################

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: todo-service
#   labels:
#     app: todo-service
# spec:
#   replicas: {{ .Values.replicaCount }}
#   selector:
#     matchLabels:
#       app: todo-service
#   template:
#     metadata:
#       labels:
#         app: todo-service
#     spec:
#       containers:
#         - name: todo-service
#           image: "{{ .Values.image.repository }}/todo-service:{{ .Values.image.tagTodoService }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           ports:
#             - containerPort: 3003
#           env:
#             - name: MONGO_URI
#               value: "{{ .Values.env.TODO_SERVICE_MONGO_URI }}"
#             - name: JWT_SECRET
#               value: "{{ .Values.env.JWT_SECRET }}"
#           resources:
#             requests:
#               memory: "256Mi"
#               cpu: "100m"
#             limits:
#               memory: "512Mi"
#               cpu: "200m"



