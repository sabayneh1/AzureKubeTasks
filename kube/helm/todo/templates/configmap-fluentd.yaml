# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: fluentd-config
#   labels:
#     app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
#     app.kubernetes.io/instance: {{ .Release.Name | quote }}
#     app.kubernetes.io/name: {{ include "todo.name" . | quote }}
#     helm.sh/chart: {{ include "todo.chart" . | quote }}
#   annotations:
#     meta.helm.sh/release-name: {{ .Release.Name | quote }}
#     meta.helm.sh/release-namespace: {{ .Release.Namespace | quote }}
# data:
#   fluent.conf: |
#     <source>
#       @type forward
#       port 24224
#     </source>
#     <source>
#       @type tail
#       path /var/log/user-service.log
#       pos_file /var/log/fluentd.pos
#       tag "user_service.login"
#       format none  # This instructs Fluentd to not parse the log but pass it as a raw message
#     </source>

#     <match user_service.login>
#       @type elasticsearch
#       host elasticsearch.default.svc.cluster.local  # Adjust this if using a different namespace or service name
#       port 9200
#       logstash_format true
#       logstash_prefix "user_service"
#       include_tag_key true
#       type_name "_doc"
#     </match>


apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/name: {{ include "todo.name" . | quote }}
    helm.sh/chart: {{ include "todo.chart" . | quote }}
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name | quote }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace | quote }}
data:
  fluent.conf: |
    <source>
      @type forward
      port 24224
    </source>
    <source>
      @type tail
      path /var/log/user-service.log
      pos_file /var/log/fluentd.pos
      tag "user_service.login"
      format none  # This instructs Fluentd to not parse the log but pass it as a raw message
    </source>

    <filter user_service.login>
      @type parser
      format /(?<action>Login attempt|User found|Password match: true|Password match: false|Invalid password for user|User authenticated successfully): (?<user>[^\s]+)/
      key_name message
      reserve_data true
      <parse>
        @type regexp
        expression /(?<action>Login attempt|User found|Password match: true|Password match: false|Invalid password for user|User authenticated successfully): (?<user>[^\s]+)/
      </parse>
    </filter>

    <filter user_service.login>
      @type record_transformer
      <record>
        action ${record["action"]}
        user ${record["user"]}
        login_status ${record["action"] == "Password match: true" ? "success" : "failure"}
      </record>
    </filter>

    <match user_service.login>
      @type elasticsearch
      host elasticsearch.default.svc.cluster.local  # Adjust this if using a different namespace or service name
      port 9200
      logstash_format true
      logstash_prefix "user_service"
      include_tag_key true
      type_name "_doc"
    </match>
