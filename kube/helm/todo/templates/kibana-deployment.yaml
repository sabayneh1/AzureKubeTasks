apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: "{{ .Values.kibana.image.repository }}:{{ .Values.kibana.image.tag }}"
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch:9200"
          resources:
            requests:
              memory: "{{ .Values.kibana.resources.requests.memory }}"
              cpu: "{{ .Values.kibana.resources.requests.cpu }}"
            limits:
              memory: "{{ .Values.kibana.resources.limits.memory }}"
              cpu: "{{ .Values.kibana.resources.limits.cpu }}"
          volumeMounts:
            - name: kibana-storage
              mountPath: /usr/share/kibana/data
      volumes:
        - name: kibana-storage
          persistentVolumeClaim:
            claimName: kibana-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kibana-pvc
  namespace: default  # Ensure this matches the namespace of your Kibana deployment
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  type: ClusterIP
  ports:
    - port: 5601
      targetPort: 5601
  selector:
    app: kibana


